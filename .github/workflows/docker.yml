name: docker

env:
  IMAGE_NAME: jschnabel/rallly

on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 4 * * SUN"
jobs:
  prepair:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: genVersions
        name: Generate Versions
        uses: ./.github/actions/genVersions
      - id: genTags
        name: Generate Tags
        uses: ./.github/actions/genTags
        with:
          VERSION: $VERSION
          VERSION_MINOR: $VERSION_MINOR
          branch: $BRANCH
      - name: Generate Env File
        uses: ./.github/actions/generateEnv
        with:
          variables: "TAGS,BRANCH,BUILD_DATE,GITHASH"
      - name: Upload Env File
        uses: actions/upload-artifact@v3
        with:
          name: env
          path: /tmp/env
  docker:
    needs: [prepair]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Checkout rallly
        uses: actions/checkout@v3
        with:
          repository: lukevella/rallly
          path: rallly
      - name: Download Env File
        uses: actions/download-artifact@v3
        with:
          name: env
          path: /tmp
      - name: Load Env
        uses: ./.github/actions/loadEnv
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./rallly
          push: true
          platforms: linux/amd64,linux/arm/v6
          tags: ${{ env.TAGS }}
          build-args: |
            BUILD_DATE=${{ env.BUILD_DATE }}
            VCS_REF=${{ env.GITHASH }}
            VERSION=${{ env.VERSION }}
